<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.visionvera.dao.ywcore.PlatformProcessDao">
	<resultMap id="BaseResultMap" type="com.visionvera.bean.slweoms.PlatformProcess" >
	    <id column="id" property="id" />
	    <result column="show_name" property="showName"/>
	    <result column="process_name" property="processName"/>
	    <result column="process_port" property="processPort" />
	    <result column="process_status" property="processStatus"/>
	    <result column="operation_system" property="operationSystem"/>	    
	    <result column="platform_name" property="platformName"/>
	    <result column="state" property="state"/>
	    <result column="process_ip" property="processIp"/>
	    <result column="process_port" property="processPort"/>
	    <result column="remark" property="remark"/>	    
	    <result column="create_time" property="createTime"/>
	    <result column="update_time" property="updateTime"/>
	    <result column="registerIds" property="registerIds"/>
	    <result column="tposPlatformVersion" property="tposPlatformVersion"/>
	    <result column="platformName" property="platformName"/>
	    <result column="platformTypeName" property="platformTypeName"/>
	    <result column="abbreviation" property="abbreviation"/>
  	</resultMap>
  	
  	<sql id="Base_Column_List" >
	    ${proc}.id
	    , ${proc}.show_name
	    , ${proc}.process_name
	    , ${proc}.process_port
	    , CASE ${proc}.process_status WHEN 'OK' THEN '1' WHEN 'PROBLEM ' THEN '0' ELSE ${proc}.process_status END AS process_status
	    , ${proc}.operation_system	    
	    , ${proc}.state
	    , ${proc}.process_ip
	    , DATE_FORMAT(${proc}.create_time,'%Y-%m-%d %H:%i:%s') AS create_time
	    , DATE_FORMAT(${proc}.update_time,'%Y-%m-%d %H:%i:%s') AS update_time
  	</sql>
	
	<!-- 根据服务器唯一标识查询所有的进程 -->
	<select id="getAllProcesses"  parameterType="string" resultMap="BaseResultMap">
		SELECT DISTINCT
	    <include refid="Base_Column_List" >
	      <property name="proc" value="proc"></property>
	    </include>
	    ,plat.tpos_name AS platformName,plat.tpos_platform_version AS tposPlatformVersion,type.platformName AS platformTypeName,type.platformType
	    ,type.abbreviation FROM t_platform_process proc
	    LEFT JOIN tpos_process_relation tpre ON proc.id = tpre.tpos_process_id
	    LEFT JOIN t_platform_tpos plat ON tpre.tpos_registerid = plat.tpos_registerid
	    LEFT JOIN t_server_basics basic ON basic.serverUnique = plat.server_unique
	    LEFT JOIN t_platform_type type ON plat.tpos_platform_type =type.platformType
	    WHERE 
	    	proc.state!=-1 AND plat.tpos_state = 0
			AND tpre.yw_uuid = '' AND proc.yw_uuid = ''
	    AND
	    	basic.serverUnique = #{serverUnique}
	</select>
	
	<!-- 插入进程 -->
	<insert id="insertPlatformProcess" parameterType="PlatformProcess" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO t_platform_process 
			(show_name, process_name, process_port,
			process_status,operation_system, 
			start_script, start_script_path, shutdown_script, 
			shutdown_script_path, environment_variables, check_script,
			state, remark,create_time)
    	VALUES 
	    	(#{showName}, #{processName}, #{processPort},
	   		'OK', #{operationSystem},
	   		#{startScript}, #{startScriptPath}, #{shutdownScript}, 
	   		#{shutdownScriptPath}, #{environmentVariables}, #{checkScript},
	   		<if test="state != null">#{state}</if><if test="state == null">0</if>,
	   		#{remark},#{createTime})
	</insert>
	<!-- 更新进程 -->
	<update id="updatePlatformProcess" parameterType="PlatformProcess">
		UPDATE t_platform_process
	    <set >
	      <if test="showName != null" >
	        show_name = #{showName},
	      </if>
	      <if test="processName != null" >
	        process_name = #{processName},
	      </if>
	      <if test="processStatus != null" >
	        process_status = #{processStatus},
	      </if>
	      <if test="operationSystem != null" >
	        operation_system = #{operationSystem},
	      </if>	      
	      <if test="state != null" >
	        state = #{state},
	      </if>
	      <if test="remark != null" >
	        remark = #{remark},
	      </if>
	      <if test="updateTime != null" >
	        update_time = #{updateTime},
	      </if>
	      <if test="processIp != null" >
	        process_ip = #{processIp},
	      </if>
	      <if test="processPort != null" >
	        process_port = #{processPort},
	      </if>
	    </set>
	    WHERE id = #{id} AND yw_uuid = ''
	</update>
	<!-- 删除进程 -->
	<delete id="deleteProcessById" parameterType="int">
		UPDATE 
			t_platform_process 
		SET 
			state = -1 
		WHERE id = #{id} AND yw_uuid = ''
	</delete>
	<!-- 根据进程id查询平台列表 -->
	<select id="getPlatformListByProcessId" parameterType="int" resultType="PlatformVO">
		SELECT
			tpos.tpos_id tposId,tpos.tpos_registerid tposRegisterid,tpos.tpos_name tposName,
			tpos.tpos_platform_type tposPlatformType,tpos.tpos_ip tposIp,
			tpos.tpos_platform_version tposPlatformVersion,tpos.tpos_linkman tposLinkman,
			tpos.tpos_phone tposPhone,tpos.tpos_email tposEmail,tpos.server_unique serverUnique
		FROM
			tpos_process_relation tpr JOIN t_platform_process proc
			ON tpr.tpos_process_id = proc.id
			JOIN t_platform_tpos tpos ON tpr.tpos_registerid = tpos.tpos_registerid
		WHERE
			proc.id = #{id} AND tpr.yw_uuid = '' AND proc.yw_uuid = ''
	</select>
	
	<!-- 根据平台唯一标识查询进程 -->
	<select id="getProcessByTposRegisterid" parameterType="string" resultMap="BaseResultMap">
		SELECT
	    <include refid="Base_Column_List" >
	      <property name="proc" value="proc"></property>
	    </include>	    
	    FROM t_platform_process proc
	    LEFT JOIN tpos_process_relation tpre ON proc.id = tpre.tpos_process_id
	    LEFT JOIN t_platform_tpos plat ON tpre.tpos_registerid = plat.tpos_registerid
	    WHERE 
	    	proc.state=0 AND plat.tpos_state = 0
	    AND
	    	plat.tpos_registerid = #{tposRegisterid} AND proc.yw_uuid = '' AND tpre.yw_uuid = ''
	</select>
	
	<!-- 根据ID查询进程信息 -->
	<select id="getProcessById" parameterType="int" resultType="map">
		SELECT
	    proc.id AS processId,
	    proc.show_name AS showName,
		proc.process_name AS processName,
		proc.process_ip AS processIp,
		proc.process_port AS processPort,
		plat.tpos_registerid AS tposRegisterid,
		plat.tpos_name AS tposName,
		plat.tpos_linkman AS tposLinkman,
		plat.tpos_phone AS tposPhone,
		plat.tpos_email AS tposEmail,
		plat.tpos_ip AS tposIp,
		plat.tpos_platform_version AS tposPlatformVersion,
		plat.conf_check AS confCheck,
		plat.conf_check_time AS confCheckTime,
		plat.version_check AS versionCheck
	    FROM t_platform_process proc
	    LEFT JOIN tpos_process_relation tpre ON proc.id = tpre.tpos_process_id
	    LEFT JOIN t_platform_tpos plat ON tpre.tpos_registerid = plat.tpos_registerid
	    WHERE proc.id = #{id} AND proc.yw_uuid = '' AND tpre.yw_uuid = ''
	</select>
	
	<!-- 根据服务器唯一ID查询平台数量 -->
	<select id="getTopsNumByServerUnique" parameterType="String" resultType="map">
			SELECT t.platformNum
		    FROM
			t_server_basics sb
		    LEFT JOIN (
			SELECT
				pt.server_unique,
				COUNT(
					DISTINCT (pt.tpos_platform_type)
				) AS platformNum
			FROM
				t_platform_tpos pt
			WHERE
				pt.tpos_state != '-1'
			GROUP BY
				pt.server_unique
		   ) t ON sb.serverUnique = t.server_unique
	       WHERE 
	    	sb.serverUnique = #{serverUnique}
	</select>
	
	<!-- 批量更新进程状态 -->
	<update id="recoverProcessStatusBatch" parameterType="list">
		UPDATE 
			t_platform_process 
		SET 
			process_status = 'OK'
		WHERE	
			id in 
		<foreach collection="list" index="index" item="process" open="(" separator="," close=")">
			#{process.id}
		</foreach>
		AND yw_uuid = ''
	</update>
	<!-- 批量更新进程状态 -->
	<update id="recoverProcessStatusByIds" parameterType="string">
		UPDATE
		t_platform_process
		SET
		process_status = 'OK'
		WHERE
		id in (#{processIds}) AND yw_uuid = ''
	</update>
	
	<!-- 修改进程状态为正常 -->
	<update id="recoverProcessStateByIds" parameterType="string">
		UPDATE
			t_platform_process
		SET
			state = 0
		WHERE
			id in (#{processIds}) AND yw_uuid = ''
	</update>
	
	<!-- 根据进程Id字符串删除进程列表 -->
	<delete id="deleteProcessByIds" parameterType="string">
		UPDATE
			t_platform_process
		SET 
			state = -1
		WHERE
			id in (#{processIds}) AND yw_uuid = ''
	</delete>
</mapper>